#!/bin/sh

# The first argument of the script is the file name.
input_file=$1

# Using muPDF tools, we get the outline of the pdf.
outline=$(mutool show "$input_file" outline)

# Using fzf, we allow the user to select multiple chapters.
selection=$(printf %s "$outline" | fzf -m --layout=reverse --tabstop=2 --no-sort)

# For each selected section, we get the line number in $outline, and we sort them
line_numbers=$( printf %s "$selection" |
  while IFS= read -r line || [ -n "${line}" ]; do
	N= echo "${outline}" | grep -n "$line" | cut -f1 -d:
done | sort -n)

# We convert the list of sections into intervals 1,2,3,5 => 1-3, 5
intervals=$( echo "$line_numbers" | awk '
NR == 1 {PRE = -1E9 }
$1 == PRE + 1   {SEQ = 1}
$1  > PRE + 1   {
		 if (SEQ) printf "-%d", PRE
                 printf "%s%d", DL, $1
                 DL = "\n"
                 SEQ = 0
                }

                {
		PREPRE=PRE ; PRE = $1 }
END             {
                  if ($1 > PREPRE+1) { printf "\n" }
                  else { printf "-%d\n", $1 }
                }
	')

echo "selected sections" $intervals

page_intervals=""

# For each selected section, we get the line number in $outline, and we sort them
#page_intervals=$( printf %s "$intervals" |

for line in $intervals
do
       case $line in
	  *-*)  first_section=$(echo "${line}" | cut -f1 -d-)
	        last_section=$(echo "${line}" | cut -f2 -d-)
		;;
	  *)    first_section=$line
	  	last_section=$line
	  ;;
	esac

	fist_section_text=$(echo "${outline}" | head -n $first_section | tail -1)
	first_page=$(echo "$fist_section_text" | grep -oP '(?<=#)\d+' | tail -1)


	# Compute last page. (it returns nothing if it is last section)
	next_section=$((last_section+1))
	next_section_text=$(echo "${outline}" | sed "${next_section}q;d")
	last_page=$(echo "$next_section_text" | grep -oP '(?<=#)\d+' | tail -1)

	echo "${first_page}-${last_page}"
	if [ -n "$last_page" ];
	then
          pdfjam "$input_file" $last_page -q --outfile /dev/stdout | zathura -

	  while true; do
    	    read -p "Was this the last page of the section? [Yy/Nn]" yn
    	    case $yn in
             [Yy]* ) break;;
	     [Nn]* ) last_page=$((last_page-1)); break;;
             * ) echo "Please answer yes or no.";;
            esac
          done
	fi
	page_intervals="${page_intervals}${first_page}-${last_page},"

done


# We get rid of the final comma
page_intervals=$(echo $page_intervals | sed 's/,$//')

echo $page_intervals
pdfjam "$input_file" $page_intervals -q --outfile "${input_file}_temp1.pdf"
briss -s "${input_file}_temp1.pdf" -d "${input_file}_temp2.pdf"
pdfjam --nup 2x1 --landscape "${input_file}_temp2.pdf" --outfile "${input_file}_ready.pdf" --no-tidy
